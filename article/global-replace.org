#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://pengwenbin7.github.io/static/readtheorg/css/htmlize.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://pengwenbin7.github.io/static/readtheorg/css/readtheorg.css"/>
#+HTML_HEAD: <link rel="stylesheet" href="https://pengwenbin7.github.io/static/css/article.css">

#+HTML_HEAD: <script src="https://cdn.bootcss.com/jquery/2.2.3/jquery.min.js"></script>
#+HTML_HEAD: <script src="https://cdn.bootcss.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="https://pengwenbin7.github.io/static/readtheorg/js/jquery.stickytableheaders.min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="https://pengwenbin7.github.io/static/readtheorg/js/readtheorg.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="https://pengwenbin7.github.io/static/js/article.js"></script>

#+OPTIONS: ^:{} 
#+OPTIONS: _:{}
#+AUTHOR: [[mailto:pengwenbin7@126.com][pengwenbin7]]
#+TITLE: grep + sed 递归替换目录下特定文件中的内容

* 使用场景
需要将网站根目录及其子目录下以 =.html, .php, .js= 结尾的文件中的 =ab= 替换为 =XY= 。

* 解决办法
** 找到所有包含指定字符的文件
=grep -r= 表示递归搜索， =-l= 表示只显示文件名， 
=--include=pattern= 用于在结果中筛选匹配 =pattern= 的，
类似地 =--exclude=pattern= 用户在结果中跳过匹配 =pattern= 的。
#+BEGIN_SRC sh
files=`grep -rl "ab" --include=*.{html,php,js} ./`
#+END_SRC

** sed 替换内容
=sed -i= 选项结果直接输出到原文件， =s/ab/XY/g= =s= 表示替换， =g= 表示全部行
#+BEGIN_SRC sh
for i in $files
    do sed -i 's/ab/XY/g' $i
done
#+END_SRC
